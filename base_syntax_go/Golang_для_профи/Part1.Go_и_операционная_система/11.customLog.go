// Пример того, как организовать запись в специальный журнальный файл.
package main 

import (
	"fmt"
	"log"
	"os"
)

var LOGFILE = "/tmp/mGo.log" // Путь к журнальному файлу задан как значение глобальной переменной с именем LOGFILE
// В данном примере журнальный файл находится в каталоге /tmp, что не является обычным местом для хранения данных, поскольку данный каталог очищается после каждой перезаргузки системы
// Сделано это для того, чтобы не запускать customLog.go с полномочиями пользователя root и не потребует размещать лишние файлы в системных каталогах.
func main() {
	f, err := os.OpenFile(LOGFILE, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644) // Используя os.OpenFile() мы создаем новый журнальный файл с необходимыми правами доступа к UNIX-файлам (0644)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer f.Close()

	iLog := log.New(f, "customLogNumber ", log.LstdFlags)

	iLog.SetFlags(log.LstdFlags) // Функция SetFlags позволяет устнавливать выходные флаги (варианты) для текущего средства журналирования.
	// По умолчанию функция предлагает значения LstdFlags: Ldate и Ltime, то есть в каждоый записи журнала, которая записывается в журнальный файл, будут указаны текущая дата и время.

	iLog.Println("Hello there!")
	iLog.Println("Another log entry!")
}
