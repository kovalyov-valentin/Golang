Редко когда программы читаются как романы.
Они больше похожи на интерактивные истории, где можно выбрать свой путь развития событий.
При заданных условиях код выбирает различные варианты работы или повторяет предыдущие шаги.



TRUE ИЛИ FALSE - ЛОГИЧЕСКИЙ ТИП ДАННЫХ В ГО

В го ответом может быть true или false, две константы которые уже объявлены.
Их можно использовать следующим образом:

var walkOutside = true
var takeTheBluePill = false

В некоторых языках программирования понятие истины несколько расплывчато.
Но в Го единственным истинным значением является true, а единственным ложным - false.

true и false являются булевыми значениями.
Ниже представлено несколько функций стандартной библиотеки булево, или логическое значение.
К примеру, в следующей программе (В ФАЙЛЕ 4.go (1)) используется функция Contains из пакета strings.
С ее помощью код проверят содержит ли переменная command текст "наружу"
Если в тексте есть это слово, результатом будет true.

ВОПРОСЫ ДЛЯ ПРОВЕРКИ (ФАЙЛ 4.GO (2))



ОПЕРАТОРЫ СРАВНЕНИЯ В ГО

Добиться значений true или false можно через сравнение двух значений.
Операторы сравнения используются как и числами, так и текстом.
Это показано в примере В ФАЙЛЕ 4.GO (3) 

ВОПРОС ДЛЯ ПРОВЕРКИ В ФАЙЛЕ 4.GO (4)



УСЛОВНЫЙ ОПЕРАТОР IF-ELSE В GOLANG

Компьютер может использовать булевы значения или сравнения для выбора между двумя различными вариантами через оператор if, как показано в следующей программе в ФАЙЛЕ 4.GO (5)

else if и else являются опциональными. Когда рассматривается несколько вариантов, можно повторять else if столько раз, сколько потребуется.

ВОПРОС ДЛЯ ПРОВЕРКИ В ФАЙЛЕ 4.GO (6)



ЛОГИЧЕСКИЕ ОПЕРАТОРЫ || и && в Golang

В Го логические оператор || значит "или" (or), а && значит "и" (and)

Истинно, если хотя бы один элемент является истиной - a || b 
Истинно, если оба элемента истинны a && b

Напишем код, что должен определить, будет ли 2100 год високосным (ФАЙЛ 4.GO (7))

Как и большинство языков программирования Го использует логику короткого замыкания.
Если первое условие истинно (год делится без остатка на 400), тогда нет нужды проверять условие, что следует за оператором ||, поэтому оно будет игнорироваться.

Оператор && действует прямо противоположно.
Если оба условия не выполняются, тогда результат будет ложен.
Если рассматриваемый год не делится без остатка на 4, тогда нет нужды проверять следующее условие.

Не логические оператор ! конвертирует булево значение с false к true или наоборот.



ОПЕРАТОР switch В Golang

Для сравнения одного значения с несколькими другими Го использует оператор switch.
Пример его использования показан в ФАЙЛЕ 4.GO (8)

Оператор switch работает и с числами.
Оператор switch также используется с условиями для каждого конкретного случая наподобие if_else.
особенностью switch является ключевое слово fallthrough, что нужно для выполнения тела следующего case.
Пример в ФАЙЛЕ 4.GO (9)



ЦИКЛ FOR В GO

Вместо многочисленного набора одного и того же кода можно использовать ключевое слово for, что повторяет нужный код за нас.
В следующей программе (ФАЙЛ 4.GO (10)) цикл работает до тех пор пока count не станет равен 0.

Перед каждой итерацией выражение count > 0 получает булево значение.
Если false (count = 0), цикл прекращается. 
В противном случае запускается тело цикла (код между { и })

В бесконечном цикле условие for не уточняется, но цикл все еще можно прервать через break.
В следующем коде (ФАЙЛ 4.GO (11)) какой объект движется по окружности 360 градусов и останавливается в случайно точке.

ВОПРОС ДЛЯ ПРОВЕРКИ ФАЙЛ 4.GO (12)



ЗАКЛЮЧЕНИЕ:
    1. При указании условия могут использоваться только булевы значения.
    2. В Го для условий и повторений используются, if, switch и for. 
    3. на данный момент мы рассмотрели 12 из 25 ключевых слов в Го:
        1. package
        2. import
        3. func
        4. var 
        5. if
        6. else 
        7. switch
        8. case 
        9. default
        10. fallthrough
        11. for 
        12. break


ЗАДАНИЕ ФАЙЛ 4.GO (13)