Го является компилируемым языком программирования со статической типизацией.

Характерные черты Го:
1. Встроенная поддержка параллельного программирования;
    1.1. Горутины(зеленые потоки) и легкий старт новых Горутин
    1.2. Каналы (на основе модели CSP) и выборочные механизмы синхронизации между горутинами.
2. Типы контейнера map и slice являются объектами первого класса
3. Полиморфизм через интерфейсы
4. Объединение значений и отражение через интерфейсы. 
5. Указатели
6. Замыкание функции
7. Методы
8. Отложенные вызовы функций
9. Включение типа 
10. Исключение типа 
11. Сохранение памяти 
12. Автоматический сбор мусора
13. Отличная кроссплатформенная совместимость

Хоть Го и является компилируемым языком со статической типизацией, в нем также сть довольно много функций, присущих динамическим скриптовым языкам.
Можно сказать, ГО владеет как строгостью статических языков, так и гибкостью динамических языков.

КОМПИЛЯТОРЫ В GOLANG
В настоящее время самый популярный компилятор для Го написан на Го и поддерживается командой разработчиков Го.
Стандартный компилятор Го, или gs (go compiler). Не путать с GS - garbage collection (сборка мусора).
Команда разработчиков Го поддерживает еще один компилятор Го - gccgo.

Большинство команд, написанных на Го, компилируется довольно быстро.
Время компиляции является важным фактором успешного развития.
Короткое время разработки - одна из причин, почему многим программистам нравится Го.

Преимущества исполняемых файлов Го:
1. Небольшой объем памяти 
2. Быстрое выполнение кода 
3. Короткая продолжительность подготовки

Некоторые другие компилируемые языки, такие как C/C++/Rust также обладают данными преимуществами, в каких то аспектах выигрывают в сравнении с Го.
Однако у Го перед ними есть свои плюсы:
1. Быстрая компиляция приводит к хорошему опыту локальной разработки и коротким циклам итерации.
2. Гибкий, как динамиеческие языки 
3. Встроенная поддержка параллельного программирования 

В настоящее время Го широко используется в сетях, системных инструментах, разработке баз данных и в блокчейне.
В последнее время все больше разрабов используют Го для создания игр, проектов с большими объемами данных и ИИ.

В дизайне Го есть определенные минусы.
К примеру, Го не поддерживает произвольные неизменяемые значения.
Это приводит к тому, что многие значения, не предназначенные для изменения в стандартных пакетах, объявляются как переменные.
Это потенциально слабое место в безопасности Го.
Го также не поддерживает дженерики для пользовательских типов и функций. 
