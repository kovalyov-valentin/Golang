Оператор switch в Go

Оператор switch в Го предоставляет возможность многостороннего выполнения.
Спецификатор выражения или типа сравнивается с кейсами внутри оператора switch, чтобы определить, какую ветвь выполнить.

Кейсы switch выполняются сверху вниз, останавливаясь при успехе.
Операторы switch работают со значениями любого типа.

Есть два типа операторов switch: выражения и типы.
Можно использовать запятые для разделения нескольких выражений в одном случае оператора.
Оператор switch без выражения является альтернативным способом выражения логики if/else.

Оператор по умолчанию default можно использовать для выполнения ветки, когда больше ничего не подходит.
Он является необязательным.

ПРИМЕР ИСПОЛЬЗОВАНИЯ ОПЕРАТОРА switch В Go

Далее в ФАЙЛЕ 5.GO (1) представлен пример использования оператора switch.

В выше представленной программе мы находим текущий день недели и выводим соответствующее сообщение.
Оператор switch принимает выражение, которое соответствует дню недели.
Если день недели соответствует time.Monday, выводится сообщение "Сегодня понедельник"



НЕСКОЛЬКО ВЫРАЖЕНИЙ В ОПЕРАТОРЕ switch В GO 

Возможно опместить несколько выражений в одном кейсе. Пример ФАЙЛ 5.GO (2)

Вышепредставленный пример выводит день рабочей недели или выходной день, в зависимости от нескольких выражений в операторах с двумя кейсами.



ОПЕРАТОР switch ПРИМЕР С default В GO 

Оператор по умолчанию можно использовать для всех значений, которые не соответствуют указанным случаям.
Пример в ФАЙЛ 5.GO (3)

Пример проверяет размер одежды.



НЕОБЯЗАТЕЛЬНЫЙ ОПЕРАТОР ПРИ РАБОТЕ СО switch В GO 

Необязательный оператор инициализатор может предшествовать выражению switch.
Инициализатор и выражение разделяются точкой с запятой.
ПРИМЕР ФАЙЛ 5.GO (4)

В вышепредставленном случай switch есть инициализатор и выражение.
Оператор определяет, четное значение или нечетное.
num := 6 является инициализатором, а num % 2 выражением.



ОПЕРАТОР break В GO 

Го использует неявный оператор break для каждого случая.
Если нужно, мы также можем явно указать break. 
ПРИМЕР ФАЙЛ 5.GO (5)

В Вышепредставленном примере мы выполняем цикл через строку, которая содержит различные символы.
Выводится все кроме пробела.

w := "a b c\td\nefg hi"
У нас есть табуляция и символ перевода на новую строку.

for _, e := range w {
Перебираем элементы строки с помощью range цикла for.

switch e {
    case ' ', '\t', '\n': 
        break
Если мы встречаем указанные три пробела, мы завершаем оператор switch с помощью break.



ОПЕРАТОР switch БЕЗ ВЫРАЖЕНИЯ В GO

При использовании оператора switch без выражения, это фактически равно выражению switch true.
Эту форму можно использовать вместо многострочных операторов if/else для сокращения кода. 
ПРИМЕР ФАЙЛ 5.GO (6)

В зависимости от текущего времени выводится АМ или РМ. 



КЛЮЧЕВОЕ СЛОВО fallthrough В switch

Для перехода к следующему кейсу можно использовать ключевое слово fallthrough.
ПРИМЕР ФАЙЛ 5.GO (7)

Вышепредставленная программа помогает нам представить, что мы переходим от остановки А к остановке Е.
Мы определяем сколько остановок впереди нас на основании видимой остановки.



ИСПОЛЬЗОВАНИЕ type В switch 

С помощью type мы можем переключиться на тип значения интерфейса.
ПРИМЕР ФАЙЛ 5.GO (8)

В вышепредставленном примере выводится тип данных значения.

Для булева типа выводится "boolean".

Наше значение 112523652346.23463246345 принадлежит к типу float64.